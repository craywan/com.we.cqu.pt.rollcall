<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.uddp.mapper.ClassInfoMapper">
  <resultMap id="BaseResultMap" type="edu.uddp.model.ClassInfo">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="major_id" jdbcType="CHAR" property="majorId" />
    <result column="grade" jdbcType="CHAR" property="grade" />
    <result column="major" jdbcType="VARCHAR" property="major" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    class_id, major_id, grade, major
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    distinct
    <include refid="Base_Column_List" />
    from class_info
  </select>
  <select id="selectByClassId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    distinct
    <include refid="Base_Column_List" />
    from class_info
    where class_id like '%' #{classId} '%'
  </select>
  <select id="selectByExample" parameterType="edu.uddp.model.ClassInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.uddp.model.ClassInfoExample">
    delete from class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.uddp.model.ClassInfo">
    insert into class_info (id, class_id, major_id, 
      grade, major)
    values (#{id,jdbcType=INTEGER}, #{classId,jdbcType=VARCHAR}, #{majorId,jdbcType=CHAR}, 
      #{grade,jdbcType=CHAR}, #{major,jdbcType=VARCHAR})
  </insert>
  <insert id="insertClassList" useGeneratedKeys="true" parameterType="java.util.List">
    insert into stu_info (major,
    grade, class_id)
    values
    <foreach collection="list" item="item" index="index" separator=",">
       #{item.major,jdbcType=VARCHAR},
      #{item.grade,jdbcType=CHAR}, #{item.classId,jdbcType=VARCHAR})
    </foreach>
    on duplicate key update
    major = VALUES (major),
    grade = VALUES (grade)
  </insert>
  <insert id="insertSelective" parameterType="edu.uddp.model.ClassInfo">
    insert into class_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="majorId != null">
        major_id,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="major != null">
        major,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null">
        #{majorId,jdbcType=CHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=CHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.uddp.model.ClassInfoExample" resultType="java.lang.Long">
    select count(*) from class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update class_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.majorId != null">
        major_id = #{record.majorId,jdbcType=CHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=CHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update class_info
    set id = #{record.id,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=VARCHAR},
      major_id = #{record.majorId,jdbcType=CHAR},
      grade = #{record.grade,jdbcType=CHAR},
      major = #{record.major,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>