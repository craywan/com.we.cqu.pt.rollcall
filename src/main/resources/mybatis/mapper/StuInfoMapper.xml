<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.uddp.mapper.StuInfoMapper">
  <resultMap id="BaseResultMap" type="edu.uddp.model.StuInfo">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="major_name" jdbcType="VARCHAR" property="majorName" />
    <result column="Institute" jdbcType="VARCHAR" property="institute" />
    <result column="major_id" jdbcType="CHAR" property="majorId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stu_id, name, gender, grade, class_id, major_name, Institute, major_id, status
  </sql>
  <select id="selectByExample" parameterType="edu.uddp.model.StuInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stu_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByClassId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from stu_info where class_id = #{classId,jdbcType=VARCHAR} And status = "在校";
  </select>
  <select id="selectByStuId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from stu_info where stu_id = #{stuId};
  </select>
  <delete id="deleteByExample" parameterType="edu.uddp.model.StuInfoExample">
    delete from stu_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <!--<insert id="insertStuList" useGeneratedKeys="true" parameterType="java.util.List">-->
    <!--insert into stu_info (stu_id, name, gender, class_id, major_id, major_name, institute, grade, status)-->
    <!--values-->
    <!--<foreach collection="list" item="item" index="index" separator=",">-->
      <!--(#{item.stuId,jdbcType=CHAR}, #{item.name,jdbcType=VARCHAR},-->
      <!--#{item.gender,jdbcType=CHAR}, #{item.stuClass,jdbcType=CHAR}, #{item.majorId,jdbcType=CHAR}, #{item.majorName,jdbcType=VARCHAR},-->
      <!--#{item.institute,jdbcType=VARCHAR}, #{item.grade,jdbcType=CHAR}, #{item.status,jdbcType=CHAR})-->
    <!--</foreach>-->
    <!--on duplicate key update-->
    <!--name = VALUES (name),-->
    <!--gender = VALUES (gender),-->
    <!--class_id = VALUES (class_id),-->
    <!--major_id = VALUES (major_id),-->
    <!--major_name = VALUES (major_name),-->
    <!--institute = VALUES (institute),-->
    <!--grade = VALUES (grade),-->
    <!--status = VALUES (status)-->
  <!--</insert>-->
  <insert id="insert" parameterType="edu.uddp.model.StuInfo">
    insert into stu_info (id, stu_id, name, 
      gender, grade, class_id, 
      major_name, Institute, major_id, 
      status)
    values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, #{classId,jdbcType=VARCHAR}, 
      #{majorName,jdbcType=VARCHAR}, #{institute,jdbcType=VARCHAR}, #{majorId,jdbcType=CHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.uddp.model.StuInfo">
    insert into stu_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="majorName != null">
        major_name,
      </if>
      <if test="institute != null">
        Institute,
      </if>
      <if test="majorId != null">
        major_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="majorName != null">
        #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="institute != null">
        #{institute,jdbcType=VARCHAR},
      </if>
      <if test="majorId != null">
        #{majorId,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.uddp.model.StuInfoExample" resultType="java.lang.Long">
    select count(*) from stu_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stu_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.majorName != null">
        major_name = #{record.majorName,jdbcType=VARCHAR},
      </if>
      <if test="record.institute != null">
        Institute = #{record.institute,jdbcType=VARCHAR},
      </if>
      <if test="record.majorId != null">
        major_id = #{record.majorId,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stu_info
    set id = #{record.id,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      major_name = #{record.majorName,jdbcType=VARCHAR},
      Institute = #{record.institute,jdbcType=VARCHAR},
      major_id = #{record.majorId,jdbcType=CHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>