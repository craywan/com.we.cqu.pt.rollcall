<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.uddp.mapper.RollcallLessonStuHistoryMapper">
  <resultMap id="BaseResultMap" type="edu.uddp.model.RollcallLessonStuHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stu_id" jdbcType="CHAR" property="stuId" />
    <result column="lesson_id" jdbcType="VARCHAR" property="lessonId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stu_id, lesson_id, created_at
  </sql>
  <select id="selectByExample" parameterType="edu.uddp.model.RollcallLessonStuHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rollcall_lesson_stu_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByLessonId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from rollcall_lesson_stu_history
    where lesson_id = #{lessonId,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rollcall_lesson_stu_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="delete" parameterType="edu.uddp.model.RollcallLessonStuHistory">
    delete from rollcall_lesson_stu_history
    where stu_id = #{stuId,jdbcType=CHAR} AND created_at = #{createdAt,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rollcall_lesson_stu_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.uddp.model.RollcallLessonStuHistoryExample">
    delete from rollcall_lesson_stu_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.uddp.model.RollcallLessonStuHistory">
    insert into rollcall_lesson_stu_history (stu_id, lesson_id,
    created_at)
    values (#{stuId,jdbcType=CHAR}, #{lessonId,jdbcType=VARCHAR},
      now())
  </insert>
  <insert id="insertList" useGeneratedKeys="true" parameterType="java.util.List">
    insert into rollcall_lesson_stu_history (stu_id, lesson_id,
    created_at)
    values
    <foreach collection="list" item="item" index="index" separator=",">
       (#{item.stuId,jdbcType=CHAR}, #{item.lessonId,jdbcType=VARCHAR},
      now())
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="edu.uddp.model.RollcallLessonStuHistory">
    insert into rollcall_lesson_stu_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="lessonId != null">
        lesson_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=CHAR},
      </if>
      <if test="lessonId != null">
        #{lessonId,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.uddp.model.RollcallLessonStuHistoryExample" resultType="java.lang.Long">
    select count(*) from rollcall_lesson_stu_history
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rollcall_lesson_stu_history
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=CHAR},
      </if>
      <if test="record.lessonId != null">
        lesson_id = #{record.lessonId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rollcall_lesson_stu_history
    set id = #{record.id,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=CHAR},
      lesson_id = #{record.lessonId,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.uddp.model.RollcallLessonStuHistory">
    update rollcall_lesson_stu_history
    <set>
      <if test="stuId != null">
        stu_id = #{stuId,jdbcType=CHAR},
      </if>
      <if test="lessonId != null">
        lesson_id = #{lessonId,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uddp.model.RollcallLessonStuHistory">
    update rollcall_lesson_stu_history
    set stu_id = #{stuId,jdbcType=CHAR},
      lesson_id = #{lessonId,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>